
fullnameOverride: "newrelic-prometheus-agent"
cluster: "instruqt-cluster"
customSecretName: "newrelic-license-key"
customSecretLicenseKey: "license-key"

config:
  common:
    scrape_interval: 30s
  newrelic_remote_write:
    extra_write_relabel_configs:
      # Enable the extra_write_relabel_configs below for backwards compatibility with legacy POMI labels.
      # This helpful when migrating from POMI to ensure that Prometheus metrics will contain both labels (e.g. cluster_name and clusterName).
      # For more migration info, please visit the [migration guide](https://docs.newrelic.com/docs/infrastructure/prometheus-integrations/install-configure-prometheus-agent/migration-guide/).
      - source_labels: [namespace]
        action: replace
        target_label: namespaceName
      - source_labels: [node]
        action: replace
        target_label: nodeName
      - source_labels: [pod]
        action: replace
        target_label: podName
      - source_labels: [service]
        action: replace
        target_label: serviceName
      - source_labels: [cluster_name]
        action: replace
        target_label: clusterName
      - source_labels: [job]
        action: replace
        target_label: scrapedTargetKind
      - source_labels: [instance]
        action: replace
        target_label: scrapedTargetInstance

  kubernetes:
    integrations_filter:
      # INSTRUQT: Challenge 2
      enabled: true
      # -- source_labels used to fetch label values in the relabel config added by the integration filters configuration
      source_labels: ["app.kubernetes.io/name", "app.newrelic.io/name", "k8s-app"]
      # -- app_values used to create the regex used in the relabel config added by the integration filters configuration.
      # Note that a single regex will be created from this list, example: '.*(?i)(app1|app2|app3).*'
      app_values: ["redis", "traefik", "calico", "nginx", "coredns", "kube-dns", "etcd", "cockroachdb"]

    # Kubernetes jobs define [kubernetes_sd_configs](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config)
    # to discover and scrape Kubernetes objects. Besides, a set of relabel_configs are included in order to include some Kubernetes metadata as
    # Labels. For example, address, metrics_path, URL scheme, prometheus_io_parameters, namespace, pod name, service name and labels are taken
    # to set the corresponding labels.
    # Please note, the relabeling allows configuring the pod/endpoints scrape using the following annotations:
    # - `prometheus.io/scheme`: If the metrics endpoint is secured then you will need to set this to `https`
    # - `prometheus.io/path`: If the metrics path is not `/metrics` override this.
    # - `prometheus.io/port`: If the metrics are exposed on a different port to the service for service endpoints or to
    #   the default 9102 for pods.
    # - `prometheus.io/param_<param-name>`: To include additional parameters in the scrape URL.
    jobs:
    # INSTRUQT: Challenge 2
    # 'default' scrapes all targets having 'prometheus.io/scrape: true'
    # out of the box, since kubernetes.integrations_filter.enabled=true then only targets selected by the integration filters are considered.
    - job_name_prefix: default
      target_discovery:
        pod: true
        endpoints: true
        filter:
          annotations:
            prometheus.io/scrape: true

    # INSTRUQT: Challenge 3
    # 'newrelic' scrapes all targets having 'newrelic.io/scrape: true'.
    # This is useful to extend the targets scraped by the 'default' job allowlisting services leveraging `newrelic.io/scrape` annotation
    - job_name_prefix: newrelic
      integrations_filter:
        enabled: false
      target_discovery:
        pod: true
        endpoints: true
        filter:
          annotations:
            newrelic.io/scrape: true

  static_targets:
    jobs:
    # # INSTRUQT: Challenge 5
    # - job_name: instruqt-node-exporter
    #   targets:
    #     - "INSTRUQT_HOSTNAME:9100"
    #   basic_auth:
    #     username: prometheus
    #     password: PASSWORD
    # # INSTRUQT: Challenge 5
    #   extra_metric_relabel_config:
    #     # Drop all metrics in the node_sockstat and node_timex metric groups
    #     - source_labels: [__name__]
    #       regex: node_(sockstat|timex).*
    #       action: drop
    #     # Drop all devices except ens4 and cni0 for all node_network metrics
    #     - source_labels: [__name__, device]
    #       regex: node_network.*;(ens4|cni0)
    #       action: keep

    - job_name: self-metrics
      skip_sharding: true  # sharding is skipped to obtain self-metrics from all Prometheus servers.
      targets:
        - "localhost:9090"
      extra_metric_relabel_config:
        - source_labels: [__name__]
          regex: "\
            prometheus_agent_active_series|\
            prometheus_target_interval_length_seconds|\
            prometheus_target_scrape_pool_targets|\
            prometheus_remote_storage_samples_pending|\
            prometheus_remote_storage_samples_in_total|\
            prometheus_remote_storage_samples_retried_total|\
            prometheus_agent_corruptions_total|\
            prometheus_remote_storage_shards|\
            prometheus_sd_kubernetes_events_total|\
            prometheus_agent_checkpoint_creations_failed_total|\
            prometheus_agent_checkpoint_deletions_failed_total|\
            prometheus_remote_storage_samples_dropped_total|\
            prometheus_remote_storage_samples_failed_total|\
            prometheus_sd_kubernetes_http_request_total|\
            prometheus_agent_truncate_duration_seconds_sum|\
            prometheus_build_info|\
            process_resident_memory_bytes|\
            process_virtual_memory_bytes|\
            process_cpu_seconds_total"
          action: keep